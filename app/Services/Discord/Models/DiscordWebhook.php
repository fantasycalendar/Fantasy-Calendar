<?php

namespace App\Services\Discord\Models;

use App\Models\Calendar;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Query\Builder;

class DiscordWebhook extends Model
{
    use HasFactory;

    protected $guarded = [];

    public static function fromPayload(mixed $body)
    {
        return [
            'name' => $body['webhook']['name'],
            'access_token' => $body['access_token'],
            'refresh_token' => $body['refresh_token'],
            'expires_in' => $body['expires_in'],
            'active' => 1,
            'channel_id' => $body['webhook']['channel_id'],
            'webhook_token' => $body['webhook']['token'],
            'avatar' => $body['webhook']['avatar'],
            'type' => $body['webhook']['type'],
            'user_id' => auth()->user()->id,
            'discord_auth_token_id' => auth()->user()->discord_auth->id,
            'discord_guild_id' => DiscordGuild::where('guild_id', $body['webhook']['guild_id'])
                ->firstOrFail()
                ->id,
        ];
    }

    protected static function booted()
    {
        self::addGlobalScope('active', function(Builder $query){
            return $query->where('active', 1);
        });

        parent::booted(); // TODO: Change the autogenerated stub
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function calendar()
    {
        return $this->belongsTo(Calendar::class);
    }

    public function discord_auth()
    {
        return $this->belongsTo(DiscordAuthToken::class);
    }

    public function guild()
    {
        return $this->belongsTo(DiscordGuild::class);
    }
}
